openapi: 3.0.0
info:
  title: Product API
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Localhost
paths:
  /product:
    post:
      tags:
        - product
      summary: Create a new product
      operationId: createProduct
      requestBody:
        description: Product to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDResponse'

  /telegram-bot:
    post:
      tags:
        - telegram-bot
      summary: Create a telegram bot
      operationId: createTelegramBot
      requestBody:
        description: Telegram bot
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelegramBotRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDResponse'
    delete:
      tags:
        - telegram-bot
      summary: Delete a telegram bot by ID
      operationId: deleteTelegramBot
      parameters:
        - name: id
          in: query
          description: ID of the telegram bot to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Telegram bot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /telegram-bot/{id}:
    get:
      tags:
        - telegram-bot
      summary: Get a telegram bot by ID
      operationId: getTelegramBot
      parameters:
        - name: id
          in: path
          description: ID of the telegram bot to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Telegram bot found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelegramBot'
        '404':
          description: Telegram bot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ProductRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        price:
          type: number
          format: float
      required:
        - name
        - price

    IDResponse:
        type: object
        properties:
          id:
            type: string

    TelegramBotRequest:
      type: object
      properties:
        name:
          type: string
        token:
          type: string
        image_url:
          type: string
        description:
          type: string
      required:
        - name
        - token

    TelegramBot:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        token:
          type: string
        description:
          type: string
        image_url:
          type: string

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Resource not found"